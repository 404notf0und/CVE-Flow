import os
import pandas as pd
from lib.utils import path,time_delta
from lib.sqlite3_operate import cve_query,cve_query_where
from lib.json2sqlite3 import *
from fxy.nlp2vec import wordindex
from fxy.model import textcnn
from sklearn.model_selection import train_test_split
from keras.models import load_model

def exp_model():
    """
    exp训练及预测模型
    :return exp_proba: DataFrame or None
    """
    so,cve=cve_query(db='cve',table='nvd',key=['*'])
    cve_df=pd.DataFrame(cve,columns=cve_tags)
    x=cve_df['CVE_Items_cve_description_description_data_value'].astype('str')
    y=cve_df['CVE_EXP_label'].astype('int')
    nlp=wordindex(char_level=False)
    fx,fy=nlp.fit_transform(x,y)
    train_x, valid_x, train_y, valid_y = train_test_split( fx, fy, random_state=2019,test_size = 0.3) 

    # 判断是否需要训练模型
    mfile=path('../data/model','exp_pre.h5')
    if not os.path.exists(mfile):
        model=textcnn(input_type='wordindex',max_len=nlp.max_length,input_dim=nlp.input_dim,output_dim=16,class_num=1)
        model.fit(train_x, train_y, validation_data=(valid_x,valid_y), epochs=3, batch_size=128)
        model.save(mfile)
    else:
        print('[INFO] Already exists exp prediction model')

    # 载入模型预测当天新增CVE
    modified_time=time_delta(delta=0,format="%Y-%m-%d")
    so,cve=cve_query_where(db='cve',table='nvd',key=['*'],where='CVE_Items_publishedDate like "%{}%"'.format(modified_time))
    if cve:
        cve_df=pd.DataFrame(cve,columns=cve_tags)
        x=cve_df['CVE_Items_cve_description_description_data_value'].astype('str')
        fx=nlp.transform(x)
        model=load_model(mfile)
        model.summary()
        pre=model.predict(fx)
        pre=pd.DataFrame(pre)
        exp_proba=pd.concat([cve_df[['CVE_Items_cve_CVE_data_meta_ID','CVE_Items_cve_description_description_data_value']],pre],axis=1)
        exp_proba.columns = ['CVE_ID','Description','EXP_Proba']
    else:
        print('[INFO] No CVE Today')
        return
    
    return exp_proba

if __name__ == '__main__':
    pass