import configparser
from lib.cve_feeds import cve_monitor
from lib.exp_label import exp_init,exp_add,exp_all,GitHub,max_total_count
from lib.exp_predict import exp_model
from lib.visualization import draw
from lib.seebug_crawler import seebug_headers

def auto_check():
    # 确认配置文件正常
    print('[+] Start self-check')
    conf=configparser.ConfigParser()
    conf.read('conf/info.conf')
    key_name=conf.get('CVE_Label','search_key')
    api_token=conf.get('CVE_Label','api_token')
    label_init=conf.get('CVE_Label','init')
    monitor_init=conf.get('CVE_Feeds','init')
    if len(api_token)==40:
        print('[+] Successfully set github api_token')  
    else:
        print('[!] Failed to set github api_token, corresponding functions unusable!')

    # 确认github api搜索正常
    gh=GitHub(api_token=api_token)
    total_count=max_total_count(gh=gh,kname=key_name,per_page=10)
    if total_count:
        print('[+] Successfully access to github search api')
    else:
        print('[!] Failed to access to github search api, please check and repair it!')

    # 确认seebug反反爬虫正常
    header=seebug_headers('https://www.seebug.org/vuldb/vulnerabilities')
    if header['Cookie']:
        print('[+] Successfully bypass seebug anti-crawler')
    else:
        print('[!] Failed to bypass seeebug anti-crawler, corresponding functions unusable!')
    
    print('[+] Self-check over!')
    return api_token,total_count,header,monitor_init,label_init

def auto_run(token,count,header,monitor_init,label_init):
    print('[+] Start run automatically')
    # CVE数据解析、入库
    ret,cve_day,exp_day=cve_monitor(monitor_init)
    # 第三方EXP数据解析、入库
    exp_init(label_init)
    third_part_exp_add=exp_add(token,count,header)
    third_part_exp_all=exp_all(token,count,header)
    print(ret,cve_day,exp_day,third_part_exp_add,third_part_exp_all)
    # 训练模型:third_part_exp_all（过去）
    # todo
    # 输出报告：过去数据的visualization（过去），当天新增cve及exp数据（cve_day,exp_day,third_part_exp_add）（现在），exp预测结果（未来）
    # todo

if __name__=="__main__":
    token,count,header,monitor_init,label_init=auto_check()
    auto_run(token,count,header,monitor_init,label_init)

    